name: Build (Linux/macOS/Windows)

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

permissions:
  contents: read

jobs:
  build:
    name: ${{ matrix.os }} â€¢ ${{ matrix.config }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        config: [Release]  # add Debug if you want both

    steps:
      - name: Checkout (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive

      # Ninja for consistent multi-OS builds (optional but nice)
      - name: Install Ninja (Linux)
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y ninja-build
      - name: Install Ninja (macOS)
        if: runner.os == 'macOS'
        run: brew install ninja
      # Windows runners already have Ninja

      - name: Configure
        run: >
          cmake -S . -B build
          -G Ninja
          -DCMAKE_BUILD_TYPE=${{ matrix.config }}
          -DCMAKE_CXX_STANDARD=17

      - name: Build
        run: cmake --build build --config ${{ matrix.config }} -- -k 0 -j 2

      # Optional: upload the built binaries so you can download them from the run page
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-${{ matrix.config }}
          path: |
            build/**/*.exe
            build/**/*.dll
            build/**/*.dylib
            build/**/*.so
            build/**/${{ matrix.config }}/**